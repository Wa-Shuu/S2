<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.washuu.s2.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.washuu.s2.domain.Comment">
    <id column="com_id" jdbcType="INTEGER" property="comId" />
    <result column="mid" jdbcType="INTEGER" property="mid" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="moment_type" jdbcType="VARCHAR" property="momentType" />
    <result column="to_uid" jdbcType="INTEGER" property="toUid" />
    <result column="from_uid" jdbcType="INTEGER" property="fromUid" />
    <result column="commend" jdbcType="INTEGER" property="commend" />
    <result column="unlike" jdbcType="INTEGER" property="unlike" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    com_id, mid, content, moment_type, to_uid, from_uid, commend, unlike, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.washuu.s2.domain.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where com_id = #{comId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where com_id = #{comId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.washuu.s2.domain.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.washuu.s2.domain.Comment">
    insert into comment (com_id, mid, content, 
      moment_type, to_uid, from_uid, 
      commend, unlike, create_time, 
      update_time)
    values (#{comId,jdbcType=INTEGER}, #{mid,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{momentType,jdbcType=VARCHAR}, #{toUid,jdbcType=INTEGER}, #{fromUid,jdbcType=INTEGER}, 
      #{commend,jdbcType=INTEGER}, #{unlike,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.washuu.s2.domain.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="comId != null">
        com_id,
      </if>
      <if test="mid != null">
        mid,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="momentType != null">
        moment_type,
      </if>
      <if test="toUid != null">
        to_uid,
      </if>
      <if test="fromUid != null">
        from_uid,
      </if>
      <if test="commend != null">
        commend,
      </if>
      <if test="unlike != null">
        unlike,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="comId != null">
        #{comId,jdbcType=INTEGER},
      </if>
      <if test="mid != null">
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="momentType != null">
        #{momentType,jdbcType=VARCHAR},
      </if>
      <if test="toUid != null">
        #{toUid,jdbcType=INTEGER},
      </if>
      <if test="fromUid != null">
        #{fromUid,jdbcType=INTEGER},
      </if>
      <if test="commend != null">
        #{commend,jdbcType=INTEGER},
      </if>
      <if test="unlike != null">
        #{unlike,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.washuu.s2.domain.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="row.comId != null">
        com_id = #{row.comId,jdbcType=INTEGER},
      </if>
      <if test="row.mid != null">
        mid = #{row.mid,jdbcType=INTEGER},
      </if>
      <if test="row.content != null">
        content = #{row.content,jdbcType=VARCHAR},
      </if>
      <if test="row.momentType != null">
        moment_type = #{row.momentType,jdbcType=VARCHAR},
      </if>
      <if test="row.toUid != null">
        to_uid = #{row.toUid,jdbcType=INTEGER},
      </if>
      <if test="row.fromUid != null">
        from_uid = #{row.fromUid,jdbcType=INTEGER},
      </if>
      <if test="row.commend != null">
        commend = #{row.commend,jdbcType=INTEGER},
      </if>
      <if test="row.unlike != null">
        unlike = #{row.unlike,jdbcType=INTEGER},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=VARCHAR},
      </if>
      <if test="row.updateTime != null">
        update_time = #{row.updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set com_id = #{row.comId,jdbcType=INTEGER},
      mid = #{row.mid,jdbcType=INTEGER},
      content = #{row.content,jdbcType=VARCHAR},
      moment_type = #{row.momentType,jdbcType=VARCHAR},
      to_uid = #{row.toUid,jdbcType=INTEGER},
      from_uid = #{row.fromUid,jdbcType=INTEGER},
      commend = #{row.commend,jdbcType=INTEGER},
      unlike = #{row.unlike,jdbcType=INTEGER},
      create_time = #{row.createTime,jdbcType=VARCHAR},
      update_time = #{row.updateTime,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.washuu.s2.domain.Comment">
    update comment
    <set>
      <if test="mid != null">
        mid = #{mid,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="momentType != null">
        moment_type = #{momentType,jdbcType=VARCHAR},
      </if>
      <if test="toUid != null">
        to_uid = #{toUid,jdbcType=INTEGER},
      </if>
      <if test="fromUid != null">
        from_uid = #{fromUid,jdbcType=INTEGER},
      </if>
      <if test="commend != null">
        commend = #{commend,jdbcType=INTEGER},
      </if>
      <if test="unlike != null">
        unlike = #{unlike,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    where com_id = #{comId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.washuu.s2.domain.Comment">
    update comment
    set mid = #{mid,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      moment_type = #{momentType,jdbcType=VARCHAR},
      to_uid = #{toUid,jdbcType=INTEGER},
      from_uid = #{fromUid,jdbcType=INTEGER},
      commend = #{commend,jdbcType=INTEGER},
      unlike = #{unlike,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR}
    where com_id = #{comId,jdbcType=INTEGER}
  </update>
</mapper>